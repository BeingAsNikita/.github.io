var objectFitImages=function(){"use strict";var s="bfred-it:object-fit-images",o=/(object-fit|object-position)\s*:\s*([-.\w\s%]+)/g,e="undefined"==typeof Image?{style:{"object-position":1}}:new Image,c="object-fit"in e.style,n="object-position"in e.style,a="background-size"in e.style,l="string"==typeof e.currentSrc,g=e.getAttribute,u=e.setAttribute,p=!1;function d(e,t,r){var i="data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='"+(t||1)+"' height='"+(r||0)+"'%3E%3C/svg%3E";g.call(e,"src")!==i&&u.call(e,"src",i)}function f(e,t){e.naturalWidth?t(e):setTimeout(f,100,e,t)}function m(t){var r,i,e=function(e){for(var t,r=getComputedStyle(e).fontFamily,i={};null!==(t=o.exec(r));)i[t[1]]=t[2];return i}(t),n=t[s];if(e["object-fit"]=e["object-fit"]||"fill",!n.img){if("fill"===e["object-fit"])return;if(!n.skipTest&&c&&!e["object-position"])return}if(!n.img){n.img=new Image(t.width,t.height),n.img.srcset=g.call(t,"data-ofi-srcset")||t.srcset,n.img.src=g.call(t,"data-ofi-src")||t.src,u.call(t,"data-ofi-src",t.src),t.srcset&&u.call(t,"data-ofi-srcset",t.srcset),d(t,t.naturalWidth||t.width,t.naturalHeight||t.height),t.srcset&&(t.srcset="");try{r=t,i={get:function(e){return r[s].img[e||"src"]},set:function(e,t){return r[s].img[t||"src"]=e,u.call(r,"data-ofi-"+t,e),m(r),e}},Object.defineProperty(r,"src",i),Object.defineProperty(r,"currentSrc",{get:function(){return i.get("currentSrc")}}),Object.defineProperty(r,"srcset",{get:function(){return i.get("srcset")},set:function(e){return i.set(e,"srcset")}})}catch(e){window.console&&console.warn("https://bit.ly/ofi-old-browser")}}!function(e){if(e.srcset&&!l&&window.picturefill){var t=window.picturefill._;e[t.ns]&&e[t.ns].evaled||t.fillImg(e,{reselect:!0}),e[t.ns].curSrc||(e[t.ns].supported=!1,t.fillImg(e,{reselect:!0})),e.currentSrc=e[t.ns].curSrc||e.src}}(n.img),t.style.backgroundImage='url("'+(n.img.currentSrc||n.img.src).replace(/"/g,'\\"')+'")',t.style.backgroundPosition=e["object-position"]||"center",t.style.backgroundRepeat="no-repeat",t.style.backgroundOrigin="content-box",/scale-down/.test(e["object-fit"])?f(n.img,function(){n.img.naturalWidth>t.width||n.img.naturalHeight>t.height?t.style.backgroundSize="contain":t.style.backgroundSize="auto"}):t.style.backgroundSize=e["object-fit"].replace("none","auto").replace("fill","100% 100%"),f(n.img,function(e){d(t,e.naturalWidth,e.naturalHeight)})}function b(e,t){var r=!p&&!e;if(t=t||{},e=e||"img",n&&!t.skipTest||!a)return!1;"img"===e?e=document.getElementsByTagName("img"):"string"==typeof e?e=document.querySelectorAll(e):"length"in e||(e=[e]);for(var i=0;i<e.length;i++)e[i][s]=e[i][s]||{skipTest:t.skipTest},m(e[i]);r&&(document.body.addEventListener("load",function(e){"IMG"===e.target.tagName&&b(e.target,{skipTest:t.skipTest})},!0),p=!0,e="img"),t.watchMQ&&window.addEventListener("resize",b.bind(null,e,{skipTest:t.skipTest}))}return b.supportsObjectFit=c,b.supportsObjectPosition=n,function(){function r(e,t){return e[s]&&e[s].img&&("src"===t||"srcset"===t)?e[s].img:e}n||(HTMLImageElement.prototype.getAttribute=function(e){return g.call(r(this,e),e)},HTMLImageElement.prototype.setAttribute=function(e,t){return u.call(r(this,e),e,String(t))})}(),b}(),noJs=document.querySelector(".site-nav__wrapper--nojs"),topLine=document.querySelector(".site-header__nav-wrapper--noJs"),ifNoJs=function(){topLine.classList.remove("site-header__nav-wrapper--noJs"),noJs.classList.remove("site-nav__wrapper--nojs"),noJs.classList.add("site-nav__wrapper--close")};ifNoJs();var navToggle=document.querySelector(".site-nav__toggle"),navWrap=document.querySelector(".site-nav__wrapper"),headerTop=document.querySelector(".site-header__nav-wrapper");console.log(headerTop),navToggle.addEventListener("click",function(e){e.preventDefault(),navToggle.classList.toggle("site-nav__toggle--open"),navWrap.classList.toggle("site-nav__wrapper--close"),navWrap.classList.toggle("site-nav__list--close"),headerTop.classList.toggle("site-header__nav-wrapper--open")}),objectFitImages();
//# sourceMappingURL=data:application/json;charset=utf8;base64,
